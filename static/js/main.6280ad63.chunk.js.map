{"version":3,"sources":["Firebase/firebase.js","Firebase/authMethods.js","ContextProviders/UserAuthProvider.js","Pages/UserRegister.js","Pages/HomePage.js","Components/AdminHeaderBar.jsx","Components/AdminNavComponents.jsx","Pages/AdminPage.js","Pages/AdminLogin.js","Pages/AddCandidatePage.js","Routes/AdminRoutes.js","Routes/UserRoutes.js","Routes/RootRoutes.js","App.js","serviceWorker.js","index.js","Assets/candidate-face.jpg"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","authMethods","email","password","setErrors","setToken","auth","createUserWithEmailAndPassword","then","user","console","log","uid","catch","err","prev","message","signInWithEmailAndPassword","currentuser","error","emailstate","signOut","firebaseAuth","React","createContext","AuthProvider","props","useState","initializing","setInit","inputs","setInputs","errors","userID","admin","setAdmin","useEffect","subscriber","onAuthStateChanged","currentUser","Provider","value","handleSignup","handleSignOut","handleSignIn","children","Signup","useContext","handleChange","e","target","name","onSubmit","preventDefault","onChange","placeholder","HomePage","onClick","AdminHeaderBar","leftIcon","AppBar","position","Toolbar","style","display","flexDirection","justifyContent","Typography","variant","IconButton","edge","color","aria-label","AdminNav","icon","link","history","useHistory","path","push","width","cursor","height","borderRadius","alignItems","backgroundColor","AdminPage","document","title","Container","marginTop","fontSize","AdminLogin","flex","padding","noValidate","autoComplete","TextField","id","label","fullWidth","helperText","type","Button","AddCandidate","AdminRouting","exact","render","rProps","component","UserRouting","RootRouting","UserRoutes","AdminRoutes","App","Boolean","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.6280ad63.chunk.js","sourcesContent":["import * as firebase from 'firebase';\nimport firestore from 'firebase/firestore'\nimport 'firebase/auth'\nimport 'firebase/app'\n\nconst settings = {timestampsInSnapshots: true};\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBxodvY1ozA5-LSe_P1-AO3g3-W8YAhCiU\",\n    authDomain: \"church-voter.firebaseapp.com\",\n    databaseURL: \"https://church-voter.firebaseio.com\",\n    projectId: \"church-voter\",\n    storageBucket: \"church-voter.appspot.com\",\n    messagingSenderId: \"126365005869\",\n    appId: \"1:126365005869:web:81baa48bbc1f067a9ee0a4\",\n    measurementId: \"G-HMDLR8FRMJ\"\n  };\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics()\nfirebase.auth()\n\nexport default {\n  firebaseConfig, \n}\n","import firebaseconfig from './firebase'\nimport firebase from 'firebase'\n\n\nexport const authMethods = {\n    signup: (email, password,setErrors,setToken) => {\n        firebase.auth().createUserWithEmailAndPassword(email,password)\n        .then(user =>{\n            console.log(user.user.uid)\n        })\n        .catch(err =>{\n            setErrors(prev => ([...prev, err.message]))\n        })\n    },\n  signin: (email, password,setErrors) => {\n    firebase.auth().signInWithEmailAndPassword(email,password)\n    .then(currentuser=>{\n      console.log(\"I HAVE LOGGED IN\")\n      console.log(currentuser)\n    })\n    .catch(error=>{\n      switch(error){\n        case 'auth/invalid-email' : \n          setErrors({emailstate:true,message:error.message})\n        break;\n        default:\n      }\n    })\n    },\n  \n  signout: () => {\n    firebase.auth().signOut()\n    },\n\n     \n    \n}","import React,{useState,useEffect} from 'react';\nimport firebase from 'firebase'\nimport {authMethods} from '../Firebase/authMethods'\nexport const firebaseAuth = React.createContext()\n\nconst AuthProvider = (props) => {\n    const [initializing, setInit] = useState(true)\n    const [inputs, setInputs] = useState({email: '', password: ''})\n  const [errors, setErrors] = useState(null)\n  const [errorState, setErrorState] = useState({email:false,password:false})\n  const [token, setToken] = useState(null)\n  const [userID,setUserID] =useState(null)\n  const [admin,setAdmin] =useState({})\n\n\n  useEffect(()=>{\n      const subscriber =firebase.auth().onAuthStateChanged(currentUser=>{\n          if(initializing){\n              setInit(false)\n          }\n          console.log(\"ADKABDJA\")\n          setAdmin(currentUser)\n          // setUserID(currentUser.uid)\n          //   console.log(userID)\n      })\n      return () =>{\n          subscriber()\n      }\n  },[])\n\n\n    const handleSignup = () => {\n        return authMethods.signup(inputs.email,inputs.password,setErrors,setToken)\n    }\n\n    const handleSignIn=()=>{\n      return authMethods.signin(inputs.email,inputs.password,setErrors)\n      \n    }\n\n    const handleSignOut=()=>{\n      return authMethods.signout()\n    }\n\n    return (\n        <firebaseAuth.Provider value={{\n            userID,\n            admin,\n            handleSignup,\n            handleSignOut,\n            handleSignIn,\n            inputs,\n            setInputs,\n            errors\n            }}>\n          {props.children}\n        </firebaseAuth.Provider>\n      )\n};\n\nexport default AuthProvider;\n","// add useContext\nimport React, {useContext} from 'react';\nimport {firebaseAuth} from '../ContextProviders/UserAuthProvider'\n\nconst Signup = () => {\n    const {handleSignup, inputs, setInputs,errors} = useContext(firebaseAuth)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        handleSignup()\n    \n      }\n      const handleChange = e => {\n        const {name, value} = e.target\n        console.log(inputs)\n        setInputs(prev => ({...prev, [name]: value}))\n      }\n\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {/* replace the div tags with a form tag */}\n      Signup\n      {/* make inputs  */}\n      <input onChange={handleChange} name=\"email\" placeholder='email' value={inputs.email} />\n      <input onChange={handleChange} name=\"password\" placeholder='password' value={inputs.password} />\n      <button>signup</button>\n      {/* {errors.length > 0 ? errors.map(error => <p style={{color: 'red'}}>{error}</p> ) : null} */}\n    </form>\n  );\n};\n\nexport default Signup;","import React,{useContext} from 'react'\nimport {Container,Button,Input} from '@material-ui/core'\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport {firebaseAuth} from '../ContextProviders/UserAuthProvider'\n\nimport Candidate from '../Components/CandidateComponent'\n\nconst HomePage =({})=>{\n    const {handleSignOut} =useContext(firebaseAuth)\n    return(\n        <div>\n           <button onClick={handleSignOut}>LOGOUT</button>\n        </div>\n    )\n}\n\nexport default HomePage;","import React,{useContext} from 'react'\nimport {Container,Button,Input,AppBar,Toolbar,IconButton,Typography} from '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {firebaseAuth} from '../ContextProviders/UserAuthProvider';\nimport { Layout, Icon, Badge } from \"antd\";\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport Candidate from '../Components/CandidateComponent'\n\nconst AdminHeaderBar=({leftIcon,email,handleSignOut})=>{\n    return(\n        <AppBar position=\"static\">\n                <Toolbar style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\"}}>\n                    {/* <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\"><MenuIcon /></IconButton> */}\n                    <Typography variant=\"h6\">\n                        {email}\n                    </Typography>\n                    <IconButton onClick={handleSignOut} edge=\"start\" color=\"inherit\" aria-label=\"menu\"><ExitToAppIcon /></IconButton>\n                    </Toolbar>\n                    </AppBar>\n    )\n}\n\nexport default AdminHeaderBar;","import React from 'react'\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport { useHistory } from \"react-router-dom\";\nimport {Container,Button,Input,AppBar,Toolbar,IconButton,Typography} from '@material-ui/core'\n\n\nconst AdminNav=({icon,name,link,onClick})=>{\n    const history = useHistory();\n    const routeChange = () =>{ \n        let path = link; \n        history.push(path);\n      }\n\n    return(\n        <div \n        onClick={routeChange}\n        style={{\n            width:300,\n            cursor:\"pointer\",\n            height:250,\n            borderRadius:10,\n            display:\"flex\",\n            flexDirection:\"column\",\n            alignItems:\"center\",\n            justifyContent:\"center\",\n            backgroundColor:\"green\",\n        }}\n        >\n            {icon}\n            <Typography style={{color:\"white\"}} variant=\"h6\">\n            {name}\n            </Typography>\n            \n\n\n\n        </div>\n\n    )\n}\n\nexport default AdminNav","import React,{useContext} from 'react'\nimport {Container,Button,Input,AppBar,Toolbar,IconButton,Typography} from '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport {firebaseAuth} from '../ContextProviders/UserAuthProvider';\nimport { Layout, Icon, Badge } from \"antd\";\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport Candidate from '../Components/CandidateComponent'\n\nimport AdminHeaderBar from '../Components/AdminHeaderBar'\nimport AdminNav from '../Components/AdminNavComponents'\nimport AddIcon from '@material-ui/icons/Add';\nimport PollIcon from '@material-ui/icons/Poll';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\n\n\nconst AdminPage =({})=>{\n    document.title=\"ADMIN PAGE\"\n    const{email} = useContext(firebaseAuth).admin\n    const{handleSignOut} = useContext(firebaseAuth)\n\n    \n      \n    return(\n        <div  >\n            <AdminHeaderBar email={email} handleSignOut={handleSignOut} />\n            <Container\n            style={{\n                display:\"flex\",\n                flexDirection:\"row\",\n                justifyContent:\"space-between\",\n                alignItems:\"center\",\n                marginTop:\"10%\"\n            }}\n            >\n                <AdminNav name={\"Add Candidate\"} link=\"/addcandidate\" link={\"/addcandidate\"} icon={<AddIcon style={{ fontSize: 80,color:\"white\" }}   />} />\n                <AdminNav name={\"Add User\"} link={\"/adduser\"} icon={<PersonAddIcon style={{ fontSize: 80,color:\"white\" }}  />} />\n                <AdminNav name={\"Show Polls\"} link={\"/showpolls\"} icon={<PollIcon style={{ fontSize: 80,color:\"white\" }}  />} />\n\n            </Container>\n        \n        </div>\n  \n\n    )\n}\n\nexport default AdminPage","import React,{useContext,useState} from 'react'\nimport {MuiThemeProvider,Container,Button,TextField,FormControl} from '@material-ui/core'\n\nimport {firebaseAuth} from '../ContextProviders/UserAuthProvider'\n\nconst AdminLogin =({})=>{\n    const {handleSignIn, inputs, setInputs,errors} = useContext(firebaseAuth)\n    const handleChange = e => {\n        const {name, value} = e.target\n        setInputs(prev => ({...prev, [name]: value}))\n    }\n    return(\n        <div\n        style={{\n            display:\"flex\",\n            alignItems:\"center\",\n            flex:1,\n            flexDirection:\"column\",\n            height:\"100vh\",\n            justifyContent:\"center\"\n        }}\n        >\n             <div>\n                <h3>WELCOME ADMIN</h3>\n            </div>  \n            <div>\n                <Container style={{padding:10,width:420,height:440,display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\"}}>\n                    <form noValidate autoComplete=\"off\" >\n                    <TextField\n                    id=\"outlined-basic\" \n                    label=\"Email\" \n                    name=\"email\"\n                    fullWidth\n                    variant=\"outlined\" \n                    value={inputs.email}\n                    onChange={handleChange}\n                    />\n\n                    <TextField \n                    style={{\n                        marginTop:10\n                    }}\n                    id=\"outlined-basic\" \n                    label=\"Password\"\n                    fullWidth\n                    name=\"password\"\n                    helperText={errors}\n                    type=\"password\"\n                    value={inputs.password}\n                    onChange={handleChange}\n                    variant=\"outlined\" />\n\n                    </form>\n\n                    <Button\n                    onClick={handleSignIn}\n                    color=\"primary\" \n                    style={{marginTop:30}}\n                    variant=\"contained\">\n                        Login Admin\n\n                    </Button>\n                    \n\n                </Container>\n            </div>\n        </div>  \n    )\n\n}\n\nconst style = {\n    margin: 15,\n};\n\nexport default AdminLogin","import React,{useContext} from 'react'\nimport AdminHeaderBar from '../Components/AdminHeaderBar'\nimport {firebaseAuth} from '../ContextProviders/UserAuthProvider';\n\n\nconst AddCandidate =()=>{\n    document.title=\"ADMIN PAGE\"\n    const{email} = useContext(firebaseAuth).admin\n    const{handleSignOut} = useContext(firebaseAuth)\n    return(\n        <div>\n          <AdminHeaderBar email={email} handleSignOut={handleSignOut} />\n          <h3>WELCOME TO ADD A CANDIDATE</h3>\n        </div>\n    )\n}\n\nexport default AddCandidate","import React,{useContext,useEffect} from \"react\";\nimport { BrowserRouter as Router, Link, Route,Switch } from \"react-router-dom\";\n\nimport AuthProvider from '../ContextProviders/UserAuthProvider'\nimport {firebaseAuth} from '../ContextProviders/UserAuthProvider'\n\nimport Signup from '../Pages/UserRegister'\nimport HomePage from \"../Pages/HomePage\";\nimport AdminPage from '../Pages/AdminPage'\nimport AdminLogin from '../Pages/AdminLogin'\n\nimport AddCandidate from '../Pages/AddCandidatePage'\nimport AddUser from '../Pages/AddUserPage'\nimport ShowPolls from '../Pages/ShowPolls'\n\nconst AdminRouting=(props)=> {\n  const {admin} =useContext(firebaseAuth)\n  console.log(admin)\n  return (\n    <Router>\n      <Route exact path='/admin' render={rProps=>admin ? <AdminPage/> :<AdminLogin />} />\n      <Route exact path='/addcandidate' component={AddCandidate} />\n      <Route exact path='/adduser' component={AddCandidate} />\n      <Route exact path='/showpolls' component={AddCandidate} />\n    </Router>\n  \n  );\n}\n\nexport default AdminRouting;","import React,{useContext,useEffect} from \"react\";\nimport { BrowserRouter as Router, Link, Route,Switch } from \"react-router-dom\";\n\nimport AdminPage from '../Pages/AdminPage'\nimport AuthProvider from '../ContextProviders/UserAuthProvider'\nimport {firebaseAuth} from '../ContextProviders/UserAuthProvider'\n\nimport Signup from '../Pages/UserRegister'\nimport HomePage from \"../Pages/HomePage\";\n\nconst UserRouting=(props)=> {\n  const {userID} =useContext(firebaseAuth)\n\n  return(\n    <Router>\n      <Route exact path='/' render={rProps=>userID ? <HomePage/> :<Signup />} />\n    </Router>\n  )\n\n \n\n}\n\nexport default UserRouting;","import React,{useContext,useEffect} from \"react\";\nimport { BrowserRouter as Router, Link, Route,Switch } from \"react-router-dom\";\n\nimport AuthProvider from '../ContextProviders/UserAuthProvider'\nimport {firebaseAuth} from '../ContextProviders/UserAuthProvider'\n\nimport Signup from '../Pages/UserRegister'\nimport HomePage from \"../Pages/HomePage\";\n\nimport AdminRoutes from './AdminRoutes'\nimport UserRoutes from './UserRoutes'\n\n\n\nconst RootRouting=(props)=> {\n  const {userID} =useContext(firebaseAuth)\n  return(\n  <Router>\n      <Route exact path='/' component={UserRoutes} />\n      <Route exact path='/admin' component={AdminRoutes} />\n</Router>\n)\n\n  \n \n}\n\nexport default RootRouting;","import React, { Component } from 'react';\nimport './App.css';\nimport {BrowserRouter} from 'react-router-dom'\n\nimport RootRouting from './Routes/RootRoutes'\nimport AuthProvider from '../src/ContextProviders/UserAuthProvider'\nimport {firebaseAuth} from '../src/ContextProviders/UserAuthProvider'\n\n\nconst App=({})=>{\n  return(\n    <AuthProvider>\n      <RootRouting />\n    </AuthProvider>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n// import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App/>,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/candidate-face.6596e7d6.jpg\";"],"sourceRoot":""}